_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[56],{JHQD:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/charts/axes",function(){return t("JSkh")}])},JSkh:function(e,n,t){"use strict";t.r(n);var o=t("nKUr"),a=t("8Kt/"),i=t.n(a),m=t("9xET"),s=t.n(m),c=t("0IK7"),r=t("wR7h"),p=r.a.AxisOn0,l=r.a.AxisWithTurnedLabels,d=r.a.CustomAxes,h=r.a.CustomAxisChart,x=r.a.CustomAxesOrientation,u=r.a.CustomAxisTickFormat,g=r.a.CustomAxisTickElement,C=r.a.DecorativeAxisCrissCross,A=r.a.DynamicComplexEdgeHints,y=r.a.DynamicCrosshair,D=r.a.DynamicCrosshairScatterplot,E=r.a.DynamicHints,N=r.a.DynamicProgrammaticRightEdgeHints,H=r.a.DynamicSimpleEdgeHints,f=r.a.DynamicSimpleTopEdgeHints,v=r.a.PaddedAxis,S=r.a.ParallelCoordinatesExample,b=r.a.StaticCrosshair,w=r.a.StaticHints,j=[{name:"Axis on 0",component:p,componentName:"AxisOn0"},{name:"Custom Axes Orientation",component:x,componentName:"CustomAxesOrientation"},{name:"Custom Axis",component:h,componentName:"CustomAxisChart"},{name:"Custom axis tick format",component:u},{name:"Custom axis tick label element",component:g},{name:"Even more Custom Axes",component:d,componentName:"CustomAxes"},{name:"Turned axis labels",component:l,componentName:"AxisWithTurnedLabels"},{name:"Unpadded Axis vs Padded Axis",component:v,componentName:"PaddedAxis"}],O=[{name:"Static Hints",component:w,componentName:"StaticHints"},{name:"Dynamic Hints",comment:"Move mouse over the point to see the hint.",component:E,componentName:"DynamicHints"},{name:"Dynamic Simple Edge Hints",comment:"Mouse over point. Hint appears on different edges. Left margin enables first point to show w/o break.",component:H,componentName:"DynamicSimpleEdgeHints"},{name:"Dynamic Simple Top Edge Hints",comment:"Mouse over point. horizontalAlign=ALIGN.AUTO, verticalAlign=ALIGN.TOP_EDGE  Hint pinned to top edge, pole moves along edge, hint box on right of pole for first 2 data points and left otherwise.",component:f,componentName:"DynamicSimpleTopEdgeHints"},{name:"Dynamic Programmatic Right Edge Hints",comment:"Mouse over point. getAlignStyle method returns style object with right and top CSS props set (pinned right edge and at y position)",component:N,componentName:"DynamicProgrammaticRightEdgeHints"},{name:"Dynamic Complex Edge Hints",comment:"Mouse over point. Hint uses flex, css to show hint and pole from point to outside plot edge (css for margin values).",component:A,componentName:"DynamicComplexEdgeHints"},{name:"Static Crosshair",component:b,componentName:"StaticCrosshair"},{name:"Dynamic Crosshair",comment:"Move your mouse over the chart to see the point.",component:y,componentName:"DynamicCrosshair"},{name:"Dynamic Crosshair Scatterplot",comment:"Move your mouse over the chart to see the point.",component:D,componentName:"DynamicCrosshairScatterplot"}],T=[{name:"Diagonal Axes",component:C,componentName:"DecorativeAxisCrissCross"},{name:"Parallel Coordinates",component:S,componentName:"ParallelCoordinatesExample"}];var _=function(e){return Object(o.jsx)("article",{id:"axes",children:Object(o.jsxs)(s.a,{type:"flex",align:"top",gutter:16,children:[j.map(c.b),O.map(c.b),T.map(c.b)]})})};n.default=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(i.a,{children:Object(o.jsx)("link",{rel:"stylesheet",href:"/react-vis.css"})}),Object(o.jsx)(_,{})]})}}},[["JHQD",0,1,2,3,4,5,6,7,8,10,11,12,21,20,23,24]]]);